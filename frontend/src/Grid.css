.grid {
  display: grid;
  grid-template-rows: repeat(9, 40px);
  grid-template-columns: repeat(12, 40px); /* Changed from 9 to 12 columns */
  gap: 0;
  background-color: #333;
  padding: 10px;
  justify-content: center;
  position: relative;
  border: 3px solid #333;
  margin-top: 15px;
  transition: all 0.3s ease;
  box-shadow: 0 5px 15px rgba(0,0,0,0.15);
}

.cell {
  width: 40px;
  height: 40px;
  background-color: #fff;
  border: 1px solid #ccc; /* Lighter default border */
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 18px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  box-sizing: border-box; /* Ensures borders don't add to the width/height */
}

/* Add thicker borders to separate 3x4 subgrids using specific classes */
.cell {
  position: relative; /* Make sure this is set for pseudo-elements */
}

/* Bottom borders for horizontal subgrid dividers */
.cell.subgrid-border-bottom {
  border-bottom: 3px solid #333;
}

/* Right borders for vertical subgrid dividers */
.cell.subgrid-border-right {
  border-right: 3px solid #333;
}

/* Remove default border from cells that are part of domino pairs */
.cell.domino-start-horizontal,
.cell.domino-end-horizontal,
.cell.domino-start-vertical,
.cell.domino-end-vertical {
  /* Keep the default border position and width, but make it more subtle */
  border-color: #ddd;
}

/* Ensure the subgrid borders remain visible even for domino cells */
.cell.domino-start-horizontal[data-col="3"],
.cell.domino-end-horizontal[data-col="3"],
.cell.domino-start-vertical[data-col="3"],
.cell.domino-end-vertical[data-col="3"],
.cell.domino-start-horizontal[data-col="7"],
.cell.domino-end-horizontal[data-col="7"],
.cell.domino-start-vertical[data-col="7"],
.cell.domino-end-vertical[data-col="7"],
.cell.domino-start-horizontal[data-col="11"],
.cell.domino-end-horizontal[data-col="11"],
.cell.domino-start-vertical[data-col="11"],
.cell.domino-end-vertical[data-col="11"] {
  border-right: 3px solid #333;
}

.cell.domino-start-horizontal[data-row="2"],
.cell.domino-end-horizontal[data-row="2"],
.cell.domino-start-vertical[data-row="2"],
.cell.domino-end-vertical[data-row="2"],
.cell.domino-start-horizontal[data-row="5"],
.cell.domino-end-horizontal[data-row="5"],
.cell.domino-start-vertical[data-row="5"],
.cell.domino-end-vertical[data-row="5"] {
  border-bottom: 3px solid #333;
}

.cell:hover {
  background-color: #f0f0f0;
}

.next-domino {
  margin-bottom: 20px;
  text-align: center;
  display: flex;
  justify-content: center;
  gap: 10px;
}

.domino {
  display: flex;
  border: 2px solid #000;
  border-radius: 5px;
  width: 80px;
  height: 40px;
  overflow: hidden;
  background-color: #fff;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
  flex-direction: row; /* Default orientation */
  transition: all 0.3s ease;
  margin: 0 auto;
  position: relative;
}

.domino:before {
  content: '→';
  position: absolute;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 18px;
  color: #333;
}

.domino.vertical {
  flex-direction: column; /* Flip to vertical orientation */
  width: 40px;
  height: 80px;
}

.domino.vertical:before {
  content: '↓';
}

.domino-half {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 18px;
  font-weight: bold;
  border-right: 1px solid #000;
}

.domino-half:last-child {
  border-right: none;
}

.domino.vertical .domino-half:last-child {
  border-right: none;
  border-top: 1px solid #000;
}

.cell.filled {
  background-color: #ddd;
  color: #000;
  font-weight: bold;
}

.queue-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  margin-bottom: 15px;
  width: 100%;
}

/* New container for horizontal layout of dominoes */
.dominoes-row {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  gap: 20px;
  width: 100%;
  max-width: 600px;
}

.current-domino-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 120px;
}

.current-label {
  font-weight: bold;
  color: #2e7d32;
  margin-bottom: 5px;
}

.queue-title {
  font-size: 18px;
  font-weight: bold;
  margin-bottom: 15px;
  padding: 8px 15px;
  background-color: #2e7d32;
  color: white;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
  display: inline-block;
}

.toggle-button {
  background-color: #4CAF50;
  color: white;
  padding: 10px 15px;
  margin: 10px 0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s;
  flex: 1;
}

.toggle-button:hover {
  background-color: #45a049;
}

/* Orientation indicator */
.orientation-indicator {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 10px 0;
  font-weight: bold;
  padding: 3px 8px;
  background-color: #f5f5f5;
  border-radius: 5px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  border: 1px solid #ddd;
  font-size: 13px;
}

.orientation-label {
  display: none; /* Hide the label in the new compact layout */
}

.orientation-arrow {
  margin: 0 10px;
  font-size: 22px;
  color: #4CAF50;
  font-weight: bold;
}

.orientation-text {
  font-size: 16px;
  color: #333;
}

/* For indicating valid and invalid placements */
.cell.invalid {
  background-color: rgba(255, 0, 0, 0.5);
  animation: flashRed 0.5s 2;
}

@keyframes flashRed {
  0% { background-color: rgba(255, 0, 0, 0.5); }
  50% { background-color: rgba(255, 255, 255, 0.8); }
  100% { background-color: rgba(255, 0, 0, 0.5); }
}

/* Style for next-to-place indicator */
.placement-preview {
  position: absolute;
  background-color: rgba(0, 255, 0, 0.2);
  pointer-events: none;
  border: 2px dashed #4CAF50;
}

.cell.hovered {
  background-color: rgba(76, 175, 80, 0.3);
  box-shadow: inset 0 0 0 2px #4CAF50;
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% { box-shadow: inset 0 0 0 2px #4CAF50; }
  50% { box-shadow: inset 0 0 0 4px #4CAF50; }
  100% { box-shadow: inset 0 0 0 2px #4CAF50; }
}

/* Style when hovering over filled cells where placement would be invalid */
.cell.filled.hovered {
  background-color: rgba(255, 87, 34, 0.3);
  box-shadow: inset 0 0 0 2px #FF5722;
  animation: pulseRed 1.5s infinite;
}

@keyframes pulseRed {
  0% { box-shadow: inset 0 0 0 2px #FF5722; }
  50% { box-shadow: inset 0 0 0 4px #FF5722; }
  100% { box-shadow: inset 0 0 0 2px #FF5722; }
}

/* Make the game mode selector more attractive */
.game-mode-selector {
  margin: 20px 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.game-mode-selector label {
  margin-right: 10px;
  font-weight: bold;
}

.game-mode-selector select {
  padding: 8px 15px;
  border-radius: 4px;
  border: 1px solid #ccc;
  background-color: white;
  cursor: pointer;
  font-size: 16px;
}

.game-mode-selector select:focus {
  outline: none;
  border-color: #4CAF50;
  box-shadow: 0 0 5px rgba(76, 175, 80, 0.3);
}

/* Add some overall container styling */
.domino-game-container {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
  background-color: #f9f9f9;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  position: relative;
  overflow: hidden;
}

/* New CSS for timer and game header */
.game-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid #ddd;
}

.timer {
  font-size: 18px;
  font-weight: bold;
  background: #333;
  color: #fff;
  padding: 8px 15px;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

.dominoes-remaining {
  font-size: 16px;
  text-align: center;
  font-weight: bold;
  color: #333;
  background: #f5f5f5;
  padding: 12px;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  gap: 8px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  border-left: 4px solid #4CAF50;
  transition: all 0.3s ease;
}

.dominoes-remaining:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.stat-main {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.stat-icon {
  font-size: 18px;
}

.queue-stats {
  font-size: 14px;
  color: #f57c00;
  font-weight: normal;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
}

/* Progress bar */
.completion-meter {
  background-color: #f5f5f5;
  padding: 12px;
  border-radius: 8px;
  text-align: center;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  border-left: 4px solid #2196F3;
  transition: all 0.3s ease;
}

.completion-meter:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.meter-label {
  font-size: 14px;
  margin-bottom: 8px;
  color: #333;
  font-weight: bold;
}

.progress-bar {
  height: 12px;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: inset 0 1px 3px rgba(0,0,0,0.2);
}

.progress-fill {
  position: relative;
  overflow: hidden;
}

.progress-fill:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.2) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0.2) 75%,
    transparent 75%
  );
  background-size: 20px 20px;
  animation: progress-animation 1s linear infinite;
  z-index: 1;
}

@keyframes progress-animation {
  0% { background-position: 0 0; }
  100% { background-position: 20px 0; }
}

/* Game stats container */
.game-stats-container {
  display: flex;
  flex-direction: column;
  gap: 15px;
  margin: 10px 0 20px;
}

/* Enhance dominoes remaining display */
.dominoes-remaining {
  font-size: 16px;
  text-align: center;
  font-weight: bold;
  color: #333;
  background: #f5f5f5;
  padding: 12px;
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  gap: 8px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  border-left: 4px solid #4CAF50;
  transition: all 0.3s ease;
}

.dominoes-remaining:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.stat-main {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.stat-icon {
  font-size: 18px;
}

.queue-stats {
  font-size: 14px;
  color: #f57c00;
  font-weight: normal;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 5px;
}

/* Progress bar */
.completion-meter {
  background-color: #f5f5f5;
  padding: 12px;
  border-radius: 8px;
  text-align: center;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  border-left: 4px solid #2196F3;
  transition: all 0.3s ease;
}

.completion-meter:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.meter-label {
  font-size: 14px;
  margin-bottom: 8px;
  color: #333;
  font-weight: bold;
}

.progress-bar {
  height: 12px;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: inset 0 1px 3px rgba(0,0,0,0.2);
}

.progress-fill {
  position: relative;
  overflow: hidden;
}

.progress-fill:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.2) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0.2) 75%,
    transparent 75%
  );
  background-size: 20px 20px;
  animation: progress-animation 1s linear infinite;
  z-index: 1;
}

/* Game completion styles */
.game-complete {
  text-align: center;
  margin: 30px 0;
  padding: 30px;
  background: linear-gradient(135deg, #6dd5ed, #2193b0);
  color: white;
  border-radius: 10px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-20px); }
  to { opacity: 1; transform: translateY(0); }
}

.game-complete h2 {
  font-size: 28px;
  margin-bottom: 15px;
  text-shadow: 0 2px 2px rgba(0,0,0,0.1);
}

.game-complete p {
  font-size: 18px;
  margin-bottom: 20px;
}

.new-game-button {
  background-color: #FF9800;
  color: white;
  border: none;
  padding: 12px 24px;
  font-size: 16px;
  border-radius: 30px;
  cursor: pointer;
  font-weight: bold;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  transition: all 0.3s ease;
}

.new-game-button:hover {
  background-color: #F57C00;
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(0,0,0,0.15);
}

/* Confetti animation */
.confetti-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 100;
}

.confetti {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #f00;
  opacity: 0.7;
  animation: fall 5s linear infinite;
}

@keyframes fall {
  0% {
    transform: translateY(-100px) rotate(0deg) scale(1);
  }
  25% {
    transform: translateY(25%) rotate(90deg) scale(0.9);
  }
  50% {
    transform: translateY(50%) rotate(180deg) scale(1.1);
  }
  75% {
    transform: translateY(75%) rotate(270deg) scale(0.9);
  }
  100% {
    transform: translateY(100vh) rotate(360deg) scale(1);
  }
}

/* Button container for orientation and hint buttons */
.button-container {
  display: flex;
  justify-content: space-between;
  gap: 10px;
  margin: 10px 0 20px;
}

/* Hint button styling */
.hint-button {
  background-color: #2196F3;
  color: white;
  padding: 10px 15px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  flex: 1;
  transition: all 0.3s ease;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.hint-button:hover {
  background-color: #0b7dda;
  transform: translateY(-2px);
}

.hint-button:disabled {
  background-color: #b0bec5;
  cursor: not-allowed;
  transform: none;
}

/* Style for hint cells */
.cell.hint {
  background-color: rgba(255, 193, 7, 0.3);
  box-shadow: inset 0 0 0 2px #FFC107;
  animation: pulseHint 1.5s infinite;
}

@keyframes pulseHint {
  0% { box-shadow: inset 0 0 0 2px #FFC107; }
  50% { box-shadow: inset 0 0 0 4px #FFC107; }
  100% { box-shadow: inset 0 0 0 2px #FFC107; }
}

/* Visual styling for placed dominoes */
.cell.domino-start-horizontal {
  border-right: none;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
  background-color: #e0f2f1;
}

.cell.domino-end-horizontal {
  border-left: none;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  background-color: #e0f2f1;
}

.cell.domino-start-vertical {
  border-bottom: none;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  background-color: #e0f2f1;
}

.cell.domino-end-vertical {
  border-top: none;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  background-color: #e0f2f1;
}

/* Make sure subgrid borders always override domino borders */
.cell.subgrid-border-right.domino-start-horizontal {
  border-right: 3px solid #333 !important;
}

.cell.subgrid-border-bottom.domino-start-vertical {
  border-bottom: 3px solid #333 !important;
}

/* Add a subtle shadow for 3D effect with more muted colors */
.cell.filled.domino-start-horizontal,
.cell.filled.domino-end-horizontal,
.cell.filled.domino-start-vertical,
.cell.filled.domino-end-vertical {
  position: relative;
  background-color: hsl(calc(var(--cell-value) * 30), 60%, 90%); /* Lighter, more muted background */
  color: hsl(calc(var(--cell-value) * 30), 60%, 35%);           /* Darker, more readable text */
  font-weight: bold;
  box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.1);
}

/* Add a placement animation for when dominoes are placed */
@keyframes placedDomino {
  0% { transform: scale(1.2); opacity: 0.8; }
  100% { transform: scale(1); opacity: 1; }
}

.cell.newly-placed {
  animation: placedDomino 0.5s ease-out forwards;
}

/* Add connecting line between domino pairs */
.cell.domino-start-horizontal::after {
  content: "";
  position: absolute;
  right: 0;
  top: 50%;
  height: 0;
  width: 0;
  border-top: 12px solid transparent;
  border-bottom: 12px solid transparent;
  border-left: 5px solid rgba(0, 0, 0, 0.1);
  transform: translateY(-50%);
}

.cell.domino-end-horizontal::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  height: 0;
  width: 0;
  border-top: 12px solid transparent;
  border-bottom: 12px solid transparent;
  border-right: 5px solid rgba(0, 0, 0, 0.1);
  transform: translateY(-50%);
}

.cell.domino-start-vertical::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 0;
  height: 0;
  border-left: 12px solid transparent;
  border-right: 12px solid transparent;
  border-top: 5px solid rgba(0, 0, 0, 0.1);
  transform: translateX(-50%);
}

.cell.domino-end-vertical::before {
  content: "";
  position: absolute;
  top: 0;
  left: 50%;
  width: 0;
  height: 0;
  border-left: 12px solid transparent;
  border-right: 12px solid transparent;
  border-bottom: 5px solid rgba(0, 0, 0, 0.1);
  transform: translateX(-50%);
}

/* Add hover effect that shows the domino connection preview */
.cell.hovered.horizontal-placement::after {
  content: "";
  position: absolute;
  right: 0;
  top: 50%;
  height: 0;
  width: 0;
  border-top: 12px solid transparent;
  border-bottom: 12px solid transparent;
  border-left: 5px solid rgba(76, 175, 80, 0.5);
  transform: translateY(-50%);
}

.cell.hovered.vertical-placement::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 0;
  height: 0;
  border-left: 12px solid transparent;
  border-right: 12px solid transparent;
  border-top: 5px solid rgba(76, 175, 80, 0.5);
  transform: translateX(-50%);
}

/* Game controls section */
.game-controls {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.reset-button {
  background-color: #FF5722;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.3s ease;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.reset-button:hover {
  background-color: #E64A19;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

/* Skip button styling */
@keyframes pulse-skip {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.skip-button {
  background-color: #28a745; /* Green background */
  color: white;
  padding: 8px 15px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  margin-top: 10px;
  transition: all 0.3s ease;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 10px auto;
  gap: 5px;
}

.skip-button:before {
  content: "↩️";
  font-size: 16px;
}

.skip-button:hover {
  background-color: #218838; /* Darker green on hover */
  transform: translateY(-2px);
}

.skip-button:hover:before {
  animation: bounce 0.8s infinite;
}

@keyframes bounce {
  0%, 100% { transform: translateX(0); }
  50% { transform: translateX(-3px); }
}

.skip-button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
  transform: none;
}

/* Queue loop indicator styling */
.queue-loop-indicator {
  font-size: 14px;
  color: #e64a19;
  margin-top: 8px;
  font-weight: bold;
  background-color: rgba(255, 152, 0, 0.15);
  border: 1px solid #ff9800;
  border-radius: 4px;
  padding: 5px 10px;
  position: relative;
  overflow: hidden;
  display: inline-block;
}

.queue-loop-indicator:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Upcoming dominoes styling */
.upcoming-dominoes {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.upcoming-title {
  font-size: 14px;
  color: #444;
  margin-bottom: 10px;
  font-weight: bold;
  border-bottom: 2px dotted #ccc;
  padding-bottom: 5px;
  display: inline-block;
}

.upcoming-container {
  display: flex;
  justify-content: center;
  gap: 10px;
}

.upcoming-domino {
  display: flex;
  border: 1px solid #aaa;
  border-radius: 3px;
  width: 50px;
  height: 25px;
  background-color: #f8f8f8;
  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
  position: relative;
  transform-origin: center;
  transition: all 0.3s ease;
}

.domino-position {
  position: absolute;
  top: -8px;
  left: -8px;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background-color: #4CAF50;
  color: white;
  font-size: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  z-index: 1;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

.upcoming-domino:hover {
  transform: scale(1.1);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
  z-index: 2;
  border-color: #4CAF50;
}

.upcoming-container {
  display: flex;
  justify-content: center;
  gap: 15px;
  padding: 10px 15px;
  background-color: rgba(0, 0, 0, 0.03);
  border-radius: 6px;
  margin-top: 10px;
  border: 1px dashed #ccc;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
}

.domino-half.small {
  font-size: 14px;
  font-weight: normal;
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  border-right: 1px solid #aaa;
  color: #555;
}

.domino-half.small:last-child {
  border-right: none;
}

/* Queue loop notification */
@keyframes slideDown {
  0% { transform: translateY(-100%); opacity: 0; }
  10% { transform: translateY(0); opacity: 1; }
  90% { transform: translateY(0); opacity: 1; }
  100% { transform: translateY(-100%); opacity: 0; }
}

.queue-loop-notification {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(255, 152, 0, 0.95);
  color: white;
  padding: 12px 20px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  z-index: 1000;
  animation: slideDown 3s ease-in-out;
  max-width: 90%;
  text-align: center;
  font-weight: bold;
  border: 2px solid #fff;
}

.notification-content {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.notification-icon {
  font-size: 24px;
  animation: spin 2s infinite linear;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Skip button styling when queue has looped */
.skip-button.queue-looped {
  background-color: #218838; /* Darker green */
}

.skip-button.queue-looped:before {
  content: "↩️"; /* Keep the same icon */
}

.skip-button.queue-looped:hover {
  background-color: #1e7e34; /* Even darker green on hover */
}

@keyframes pulse-domino {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}